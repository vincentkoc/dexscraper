[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "dexscraper"
description = "Real-time DexScreener WebSocket scraper for cryptocurrency data"
authors = [
    {name = "Vincent Koc"},
]
license = {text = "GPL-3.0"}
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Financial",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = [
    "cryptocurrency",
    "trading",
    "websocket",
    "dexscreener",
    "solana",
    "defi",
    "real-time",
    "market-data"
]
dependencies = [
    "websockets>=10.0",
    "cloudscraper>=1.2.60",
]
dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/vincentkoc/dexscraper"
Repository = "https://github.com/vincentkoc/dexscraper.git"
Issues = "https://github.com/vincentkoc/dexscraper/issues"

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=2.12.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=4.0.0",
    "mypy>=0.910",
    "pre-commit>=2.15.0",
    "build>=0.8.0",
    "twine>=4.0.0",
]

[project.scripts]
dexscraper = "dexscraper.cli:cli_main"

[tool.setuptools]
packages = ["dexscraper"]

[tool.setuptools_scm]
write_to = "dexscraper/_version.py"
local_scheme = "no-local-version"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
  # auto-generated files
  | dexscraper/_version\.py
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
force_alphabetical_sort_within_sections = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "slow: marks tests as slow",
    "integration: marks tests as integration tests",
]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
exclude = [
    "dexscraper/_version.py"
]

[[tool.mypy.overrides]]
module = [
    "websockets.*",
    "cloudscraper.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["dexscraper"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E501", "F541", "D107", "D205", "D202", "D401", "D102", "D105"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    "venv",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101", "B601"]
